plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

	//spring rest docs
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.ime'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	//spring rest docs
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	//spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	//mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	//valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// H2
	runtimeOnly 'com.h2database:h2'

	//redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.22.1'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//spring rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

//spring rest docs
ext {
	snippetsDir = file('build/generated-snippets')
}
//spring rest docs
test {
	outputs.dir snippetsDir
}
//spring rest docs
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

tasks.named('test') {
	useJUnitPlatform()
}
bootJar {
	enabled = false
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}"){
		into 'static/docs'
	}
}
