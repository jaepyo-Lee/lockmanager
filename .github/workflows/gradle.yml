# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
#  pull_request:
#    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: make application.properties
      run: |
        touch ./application.properties
        echo "${{LOCKER_MANAGER_DATABASE}}" >> ./application.properties
        echo "${{LOCKER_MANAGER_AUTHKEY}}" >> ./application.properties
      shell: bash

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Docker build
      run: |
        docker login -u ${{DOCKER_ID}} -p ${{DOCKER_PASSWORD}}
        docker build -t ${{LOCKER_MANAGER_DOCKER_REPO}} .
        docker push ${{LOCKER_MANAGER_DOCKER_REPO}}

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{LOCKER_MANAGER_HOST}}
        username: ${{LOCKER_MANAGER_USERNAME}}
        key: ${{LOCKER_MANAGER_PEMKEY}}
        port: 22
        script: |
          sudo docker stop prod-server
          sudo docker rm prod-server
          sudo docker image rm ${{LOCKER_MANAGER_DOCKER_REPO}}
          sudo docker pull ${{LOCKER_MANAGER_DOCKER_REPO}}
          sudo docker run -d -p 80:8080 ${{LOCKER_MANAGER_DOCKER_REPO}}
